import n,{mkdirSync as t,writeFileSync as r}from"fs";import{join as e,dirname as u}from"path";function o(){return()=>{}}function i(n){return n}function c(){}function f(n){if(Array.isArray(n))return function(n){let t=[];return n.forEach((n=>{t.push(f(n))})),t}(n);let t=(n=function(n={}){return function(t=o,r=i,e=c,u={}){n.src=t,n.proc=r,n.sink=e,n.meta=u}(n.src,n.proc,n.sink,n.meta),n}(n)).src(),r=n.proc(t,n.meta);return n.sink(r,n.meta)}function a(n,t){return r=>n(r,t)}function m(t,r="utf-8"){return()=>n.readFileSync(t,r)}function s(n){return"object"==typeof n?(n=function(n){function t(t="./dest/",r="index",e=".txt"){n.dirname=t,n.name=r,n.extname=e}return t(n.dirname,n.name,n.extname),n}(meta.path),e(n.dirname,n.name+n.extname)):n}function p(n,e){e=function(n={}){return function(t="./dest/index.txt"){n.path=t}(n.path),n}(e);let o=s(e.path);const i=u(o);t(i,{recursive:!0}),r(o,n,e.options)}function h(n){return()=>n}function l(n){return n}function d(...n){return(t,r)=>{let e=t;return n.forEach((n=>{let t=n(e,r);e=t(e,r)})),e}}function x(...n){return(t,r)=>{let e=[];return n.forEach((n=>{e.push(n(t,r))})),e}}function y(n){console.log(n)}export{i as bypass,c as dummySink,o as dummySrc,m as file,a as meta,p as mkfile,x as parallel,y as print,l as ret,d as series,h as val,f as vesic};
