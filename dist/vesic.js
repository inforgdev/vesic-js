import t,{mkdirSync as r,writeFileSync as n}from"fs";import{format as e,dirname as o}from"path";function u(){return()=>{}}function i(t){return t}function c(){}function s(t){if(Array.isArray(t))return function(t){return t.map((t=>s(t)))}(t);let r=(t=function(t={}){return function(r=u,n=i,e=c,o={}){t.src=r,t.proc=n,t.sink=e,t.meta=o}(t.src,t.proc,t.sink,t.meta),t}(t)).src(),n=t.proc(r,t.meta);return t.sink(n,t.meta)}function f(t,r){return n=>t(n,r)}function a(t,r,n){let e,o;return{src(r){return t=r(),this},done:()=>n,meta(t){return r=t,this},useProc(t){return e=t,this},proc(n){return"object"==typeof n&&(n=meta(e,n)),t=n(t,r||{}),this},useSink(t){return o=t,this},sink(e){return"object"==typeof e&&(e=meta(o,e)),n=e(t,r||{}),this},series(...t){return t.forEach((t=>this.proc(t))),this},parallel(...t){return t.forEach((t=>this.sink(t))),this},exec(t,r){return this.meta(r),this.proc(t)}}}function p(t){return"object"==typeof t?e(t):t}function h(r,n="utf-8"){return r=p(r),()=>t.readFileSync(r,n)}function m(t,e){let u=p(e.path);const i=o(u);r(i,{recursive:!0}),n(u,t.toString(),e.options)}function l(t){return()=>t}function k(t){return t}function y(...t){return(r,n)=>t.reduce(((t,r)=>r(t,n)),r)}function b(...t){return(r,n)=>t.map((t=>t(r,n)))}function d(t){console.log(t)}export{i as bypass,c as dummySink,u as dummySrc,h as file,f as meta,m as mkfile,b as parallel,d as print,k as ret,y as series,a as stream,l as val,s as vesic};
